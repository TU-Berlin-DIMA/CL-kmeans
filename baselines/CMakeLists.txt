FIND_PACKAGE(OpenMP)
IF(OPENMP_FOUND)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
ENDIF(OPENMP_FOUND)

# SET(BLA_VENDOR Intel10_64lp)
# SET(BLA_VENDOR OpenBLAS)
# SET(BLA_VENDOR ATLAS)
# SET(BLA_VENDOR Goto)
FIND_PACKAGE(BLAS)
IF(BLAS_FOUND)
    MESSAGE(STATUS BLAS found: ${BLAS_LIBRARIES})
ENDIF(BLAS_FOUND)

FIND_PACKAGE(Armadillo 6.500)
FIND_PACKAGE(MLPack)

SET(R_KMEANS_SOURCES
    kmeans_r.cpp
    r_stats_kmeans.c
    ../binary_format.cpp
    )
ADD_EXECUTABLE(kmeans_r_float ${R_KMEANS_SOURCES})
TARGET_COMPILE_DEFINITIONS(kmeans_r_float PRIVATE FLOAT_T=float)
ADD_EXECUTABLE(kmeans_r_double ${R_KMEANS_SOURCES})
TARGET_COMPILE_DEFINITIONS(kmeans_r_double PRIVATE FLOAT_T=double)

IF(ARMADILLO_FOUND AND BLAS_FOUND)
    SET(ARMAKMEANS_SOURCES
        kmeans_armadillo.cpp
        ../binary_format.cpp
        )
    INCLUDE_DIRECTORIES(${ARMADILLO_INCLUDE_DIRS})
    ADD_EXECUTABLE(kmeans_armadillo_float ${ARMAKMEANS_SOURCES})
    TARGET_COMPILE_DEFINITIONS(kmeans_armadillo_float PRIVATE FLOAT_T=float)
    TARGET_LINK_LIBRARIES(kmeans_armadillo_float ${ARMADILLO_LIBRARIES})

    ADD_EXECUTABLE(kmeans_armadillo_double ${ARMAKMEANS_SOURCES})
    TARGET_COMPILE_DEFINITIONS(kmeans_armadillo_double PRIVATE FLOAT_T=double)
    TARGET_LINK_LIBRARIES(kmeans_armadillo_double ${ARMADILLO_LIBRARIES})
ENDIF(ARMADILLO_FOUND AND BLAS_FOUND)

IF(ARMADILLO_FOUND AND BLAS_FOUND AND MLPACK_FOUND)
    SET(MLPACKKMEANS_SOURCES
        kmeans_mlpack.cpp
        ../binary_format.cpp
        )
    INCLUDE_DIRECTORIES(${ARMADILLO_INCLUDE_DIRS} ${MLPACK_INCLUDE_DIR})
    ADD_EXECUTABLE(kmeans_mlpack_double ${MLPACKKMEANS_SOURCES})
    TARGET_LINK_LIBRARIES(kmeans_mlpack_double ${ARMADILLO_LIBRARIES} ${MLPACK_LIBRARIES})
ENDIF(ARMADILLO_FOUND AND BLAS_FOUND AND MLPACK_FOUND)
